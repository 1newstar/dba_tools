配置共享和服务发现系统

安装zookeeper
###下载二进制文件，解压并复制到/u02
###zookeeper使用java写，需要安装java(jre即可)环境

启动
/u02/zookeeper/bin/zkServer.sh start
连接
/u02/zookeeper/bin/zkCli.sh -server 127.0.0.1:2181
###命令
create /app "app_string"		###创建目录并关联字符串
ls /							###查看目录下的znode
get /app
delete /app


权限控制
zookeeper5种操作
create read write delete admin 

增加用户/进行认证
addauth digest user_name:user_password

设置权限
#明文密码
setAcl /path_to_access auth:user_name:user_password:cdrwa             ##cdrwa代表所有权限，权限的首字母

#密文密码
setAcl /path_to_access digest:user_name:user_password_digest:cdrwa  		  ##创建用户并授权

setAcl /weideguo ip:127.0.0.1:cdrwa


world
auth
digest
ip





zookeeper集群

###单个zookeeper的配置文件$zookeeper_home/conf/zoo.cfg
dataDir							##数据目录
clientPort						##监听client连接的端口
server.0=127.0.0.1:8800:7700	##单节点不需要这个，多个节点每个节点对应一个

##server.X=A:B:C	
##X	一个数字，在dataDir中创建文件myid，写入这个数字
##A	该server的ip地址
##B	该server和集群的leader交换信息所用的端口
##C	选举leader所使用的端口



###zookeeper维护一个类似文件系统的树结构，上面的节点为znode




安装etcd(快速启动codis集群使用，不是必须)

###与zookeeper类似
###也可以使用集群

操作，可以使用url的API进行操作，也可以使用etcdctl进行操作
###插入
curl http://${etcd_ip_address}:${etcd_port}/v2/keys/${key_name} -XPUT -d value=="${key_value}"

${etcd_ip_address}		ip地址
${etcd_port}			端口
${key_name} 			key为目录结构的层次
${key_value}			value为字符串


CAS : compare and set
可用于PUT、DELETE

preValue	检查key之前的值是否与客户端提供的一致
preIndex	检查key之前的modifiedIndex与客户端提供的是否一致
preExist	检查key是否存在


如果${key_name}的值为${key_old_value}，则更改为${key_new_value}：
cur PUT http://${etcd_ip_address}:${etcd_port}/v2/keys/${key_name} preValue==${key_old_value} value==${key_new_value}


###获取 
###删除 DELETE
curl http://${etcd_ip_address}:${etcd_port}/v2/keys/${key_name}



etcdctl set /key_name "key_value"
etcdctl get /key_name 
etcdctl mk /key_name "key_value"	
etcdctl update /key_name "key_value"	


