复制
主primary
使用配置文件，最小配置
master=true
source=slave_ipaddress


从secondary
slave=true
source=master_ipaddress



oplog(operation log)
主节点操作修改到数据库，然后记录到oplog，从节点复制oplog。




db.printReplicationInfo()    	//查看主节点信息
db.printSlaveReplicationInfo()	//查看从库信息

//设置从库可以连接，选择一个操作(3.4.2) 低版本不需要进行这样的操作(2.8.19)
rs.slaveOk()                  //在从库中操作
db.getMongo().setSlaveOk()    //在主库中操作



replica set (副本集)

主节点宕机时副本节点自动接管成为新的主节点


secondary1
27072

./mongod --port 27072 --replSet "my_mong" --dbpath "../data"
./mongo --port 27072



secondary2

./mongod --port 27073 --replSet "my_mong" --dbpath "../data"
./mongo --port 27073

 
primary
###启动节点
./mongod --port 27071 --replSet "my_mong" --dbpath "../data"
###登陆
./mongo --port 27071

##初始化primary节点
rs.initiate()
###添加副本集。副本节点应该先启动
rs.add("192.168.200.140:27072")  	
rs.add("192.168.200.140:27073")  

###仲裁节点添加，rs.addArb("192.168.200.140:27074")



####默认只允许主节点写数据，副本节点不允许连接查询。
####设置副本节点可以连接与查询，在每个副本集中设置 
db.getMongo().setSlaveOk()






sharding (分片)
###数据分布在shard节点中

###由于以下都使用同一个可执行文件运行，所以使用【--fork】参数


shard
###一个shard对应单个mongod实例，也可以是mongod副本集

###启动三个shard
./mongod --shardsvr --port 27081 --dbpath "../data/shard1" --logpath "../data/shard1/shard1.log" --fork
./mongod --shardsvr --port 27082 --dbpath "../data/shard2" --logpath "../data/shard2/shard2.log" --fork
./mongod --shardsvr --port 27083 --dbpath "../data/shard3" --logpath "../data/shard3/shard3.log" --fork



config server
###必须设置成副本集
./mongod --configsvr --replSet "my_config" --port 27071 --dbpath "../data/config1" --logpath "../data/config1/config1.log" --fork
./mongod --configsvr --replSet "my_config" --port 27072 --dbpath "../data/config2" --logpath "../data/config2/config2.log" --fork
./mongod --configsvr --replSet "my_config" --port 27073 --dbpath "../data/config3" --logpath "../data/config3/config3.log" --fork

./mongo --port 27071
##在命令行中设置副本集信息
rs.initiate()
rs.add("192.168.200.140:27072")  	
rs.add("192.168.200.140:27073")  


###使用副本集作为shard
config={_id:"shared1",members:[
	{_id:0,host:"hostname0:port0"},
	{_id:1,host:"hostname1:port1"},
	{_id:2,host:"hostname2:port2"},
	...
]	
}
rs.inititate(config)				



Router  ##可以有多个
###客户端由此接入
##启动
./mongos --port 40000 --configdb my_config/192.168.200.140:27071,192.168.200.140:27072,192.168.200.140:27073 --logpath "../data/mongos/mongos.log" --fork


##连接roter节点
./mongo --port 40000										

use admin													

db.runCommand({addshard:"localhost:27081"})												###副本集添加 db.runCommand({addshard:"shard_name/host_ip:host_port[,...]"})
db.runCommand({addshard:"localhost:27082"})					

	
db.runCommand({enablesharding:"db_name"})												###对db_name数据库进行分片	
db.runCommand({shardcollection:"db_name.collection_name",key:{id:hashed}})				###collectiion_name的键id以hashed进行分片

sh.addShard("db_name.collection_name",key_name)


db.runCommand({listshards:1})  	###查看分片服务器的配置
db.col_name.stats()				##查看collection的分片等信息
sh.status()



